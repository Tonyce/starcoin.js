import { addressFromSCS, addressToSCS, decodeEventKey, decodeTransactionPayload } from '.';

test("encoding address", () => {
  expect(addressToSCS("0x1").value.length).toBe(16);
  expect(addressToSCS("0x01").value.length).toBe(16);
});

test("decoding txn payload", () => {
  const payloadInHex = "0x00ea01a11ceb0b0100000007010004030416041a04051e1d073b42087d10068d010a0000000101020000000003010201010004020300000504050101010803080103010a020105010103060c05040004060c050a020403050103010900074163636f756e74064572726f727310696e76616c69645f617267756d656e740e6372656174655f6163636f756e74096578697374735f6174087061795f66726f6d0000000000000000000000000000000103086500000000000000010106071a0a01110220030505150b0238000c040a010a0421070011000c060c050b0503150b00010b06270b000a010a0338010201070000000000000000000000000000000103535443035354430003030000000000000000000000000a550c18040002e8030000000000000000000000000000";
  const txnPayload = decodeTransactionPayload(payloadInHex);
  console.log(JSON.stringify(txnPayload, undefined, 2));
});

test("decoding EventKey", () => {
  const eventKeyInHex= "0x000000000000000063af4e1cf4e6345df840f4c57597a0f6";
  const eventKey = decodeEventKey(eventKeyInHex);
  console.log(eventKey);
});
